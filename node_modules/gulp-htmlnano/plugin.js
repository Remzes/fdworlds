'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _stream = require('stream');

var _gulpUtil = require('gulp-util');

var _htmlnano = require('htmlnano');

var _htmlnano2 = _interopRequireDefault(_htmlnano);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PLUGIN_NAME = 'gulp-htmlnano';

exports.default = function (options) {
    var stream = new _stream.Transform({ objectMode: true });

    stream._transform = function (file, encoding, callback) {
        if (file.isStream()) {
            return callback(new _gulpUtil.PluginError(PLUGIN_NAME, 'Streaming not supported'));
        } else if (file.isNull() || !file.isBuffer()) {
            return callback(null, file);
        }

        _htmlnano2.default.process(String(file.contents), options).then(function (result) {
            file.contents = new Buffer(result.html);
            stream.push(file);
            callback();
        }).catch(function (error) {
            // Prevent streamâ€™s unhandled exception from being suppressed by Promise
            setImmediate(function () {
                callback(new _gulpUtil.PluginError(PLUGIN_NAME, error));
            });
        });
    };

    return stream;
};
